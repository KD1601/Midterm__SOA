<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/home.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N"
        crossorigin="anonymous"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    <title>Trang Chủ</title>
    <style>
        .menu-order {
            position: fixed;
            bottom: 120px;
            right: 24px;
            z-index: 9999;
            background-color: #3db4cc;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 1.2rem;
        }

        .list-order-btn {
            position: fixed;
            bottom: 90px;
            right: 150px;
            z-index: 9999;
            background-color: #17aeb6;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 1.2rem;
            cursor: pointer;
            transition: background-color 0.3s ease-in-out;
            margin-left: 55%;
        }

        #log-order {
            display: none;
        }
    </style>
</head>

<body>

    <div class="container-fluid">
        <div class="row flex-nowrap">
            <div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark">
                <div class="d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100">
                    <a href="/"
                        class="d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none">
                        <span class="fs-5 d-none d-sm-inline fw-bold menu">MENU</span>
                    </a>
                    <ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start"
                        id="menu">
                        <li class="nav-item">
                            <a href="/home/dv" class="nav-link align-middle px-0">Đồ viên</a>
                        </li>
                        <li class="nav-item">
                            <a href="/home/hs" class="nav-link align-middle px-0">Hải sản</a>
                        </li>
                        <li class="nav-item">
                            <a href="/home/nam" class="nav-link align-middle px-0">Nấm</a>
                        </li>
                        <li class="nav-item">
                            <a href="/home/rau" class="nav-link align-middle px-0">Rau</a>
                        </li>
                        <li class="nav-item">
                            <a href="/home/tb" class="nav-link align-middle px-0">Thịt bò</a>
                        </li>
                        <li class="nav-item">
                            <a href="/home/tg" class="nav-link align-middle px-0">Thị gà</a>
                        </li>
                        <li class="nav-item">
                            <a href="/home/th" class="nav-link align-middle px-0">Thị heo</a>
                        </li>
                    </ul>
                    <hr>
                </div>
            </div>
            <div class="col py-3 bg-dark">
                <div id="food__list" class="product-row row">
                    {{#each data}}
                    <div class="product-card col-md-5">
                        <img class="product-image" src="{{hinhanh}}" alt="Product 1">
                        <div class="product-info">
                            <h3 class="product-name" value="{{tenmonan}}">{{tenmonan}}</h3>
                            <h4 class="product-price" value="{{gia}}">{{gia}}</h4>
                            <div class="quantity-control justify-content-around counter">
                                <button class="quantity-btn decrement">-</button>
                                <span class="quantity-value count">0</span>
                                <button class="quantity-btn increment">+</button>
                            </div>
                        </div>
                    </div>
                    {{/each}}

                </div>


            </div>
        </div>

        <div>
            <div class="menu-order" id="log-order">
                <table class="table" id="menu-order-table">
                    <thead>
                        <tr>
                            <th scope="col">Tên món</th>
                            <th scope="col">Đơn giá</th>
                            <th scope="col">Số lượng</th>
                            <th scope="col">Ghi chú</th>
                            <th scope="col">Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot style="border: none;">
                        <td colspan="3"></td>
                        <th>Tổng tiền</td>
                        <td>0</td>
                    </tfoot>
                </table>
            </div>
            <button onclick="toggleLog()" class="list-order-btn">Món đang gọi</button>
            <button class="order-btn">Đặt món</button>
        </div>
    </div>


</body>
<script>
    function toggleLog() {
        var log = document.getElementById("log-order");
        if (log.style.display === "none") {
            log.style.display = "block";
        } else {
            log.style.display = "none";
        }
    }
    // Lấy tất cả các phần tử có class là "product-price"
    const productPrices = document.querySelectorAll('.product-price');

    // Lặp qua từng phần tử và định dạng lại giá tiền
    productPrices.forEach(price => {
        const rawPrice = parseInt(price.textContent); // Lấy giá tiền ban đầu
        const formattedPrice = rawPrice.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }); // Định dạng lại giá tiền
        price.textContent = formattedPrice; // Cập nhật lại giá tiền đã định dạng
    });

    var counters = document.querySelectorAll(".counter");
    // Lấy table element từ ID của table
    var table = document.getElementById("menu-order-table");
    // Lấy tbody element của table
    var tbody = table.getElementsByTagName("tbody")[0];
    var tfoot = table.getElementsByTagName("tfoot")[0];

    function increment(event) {
        var counter = event.target.closest(".counter");
        var count = parseInt(counter.querySelector(".count").innerHTML);
        count += 1;
        counter.querySelector(".count").innerHTML = count;
        if (count === 0) {
            counter.querySelector(".decrement").style.display = "none";
            counter.querySelector(".count").style.display = "none";
        } else {
            counter.querySelector(".decrement").style.display = "inline-block";
            counter.querySelector(".count").style.display = "inline-block";
        }
        //console.log(this.parentNode.parentNode.children[1].getAttribute('value'));
        var number = count;
        var name = this.parentNode.parentNode.children[0].textContent;
        var price = this.parentNode.parentNode.children[1].getAttribute('value')


        var nameCell = name;
        var quantityCell = number

        // Kiểm tra nếu tên món đã có trong bảng thì tăng số lượng lên 1 và tính lại cột thành tiền
        var existingRow = Array.from(tbody.rows).find(function (row) {
            return row.cells[0].innerHTML == nameCell;
        });

        if (existingRow) {
            var existingQuantity = parseInt(existingRow.cells[2].innerHTML);
            existingRow.cells[2].innerHTML = parseInt(quantityCell);
            existingRow.cells[4].innerHTML = parseInt(existingRow.cells[1].innerHTML) * parseInt(existingRow.cells[2].innerHTML);
        } else {
            // Tạo một row mới
            var newRow = tbody.insertRow();
            // Tạo một cell mới cho cột "Tên món"
            var nameCell = newRow.insertCell(0);
            nameCell.innerHTML = name;
            // Tạo một cell mới cho cột "Đơn giá"
            var priceCell = newRow.insertCell(1);
            priceCell.innerHTML = price;
            // Tạo một cell mới cho cột "Số lượng"
            var quantityCell = newRow.insertCell(2);
            quantityCell.innerHTML = number;
            var noteCell = newRow.insertCell(3);
            noteCell.innerHTML = "<input type='text' name='ghichu'>";
            var totalPriceCell = newRow.insertCell(4);
            totalPriceCell.innerHTML = parseInt(priceCell.innerHTML) * parseInt(quantityCell.innerHTML);
        }
        $(document).ready(function () {
            // Lấy tất cả các thẻ td cuối cùng trong tbody
            var tdList = $('#menu-order-table tbody tr td:last-child');

            // Tính tổng giá trị của các thẻ td cuối cùng
            var totalPrice = 0;
            tdList.each(function () {
                totalPrice += parseInt($(this).text());
            });

            // Đặt giá trị của tổng vào thẻ td cuối cùng của tfoot
            $('#menu-order-table tfoot td:last-child').text(totalPrice);
        });
    }

    function decrement(event) {
        var counter = event.target.closest(".counter");
        var count = parseInt(counter.querySelector(".count").innerHTML);
        count -= 1;
        counter.querySelector(".count").innerHTML = count;
        if (count === 0) {
            counter.querySelector(".decrement").style.display = "none";
            counter.querySelector(".count").style.display = "none";
        } else {
            counter.querySelector(".decrement").style.display = "inline-block";
            counter.querySelector(".count").style.display = "inline-block";
        }
        var number = count;
        var name = this.parentNode.parentNode.children[0].textContent;
        var price = this.parentNode.parentNode.children[1].getAttribute('value')

        var nameCell = name;
        var quantityCell = number

        // Kiểm tra nếu tên món đã có trong bảng thì tăng số lượng lên 1 và tính lại cột thành tiền
        var existingRow = Array.from(tbody.rows).find(function (row) {
            return row.cells[0].innerHTML == nameCell;
        });

        if (existingRow) {
            var existingQuantity = parseInt(existingRow.cells[2].innerHTML);
            existingRow.cells[2].innerHTML = parseInt(quantityCell);
            existingRow.cells[4].innerHTML = parseInt(existingRow.cells[1].innerHTML) * parseInt(existingRow.cells[2].innerHTML);
            if (quantityCell == 0) {
                existingRow.remove();
            }
        } else {
            // Tạo một row mới
            var newRow = tbody.insertRow();
            // Tạo một cell mới cho cột "Tên món"
            var nameCell = newRow.insertCell(0);
            nameCell.innerHTML = name;
            // Tạo một cell mới cho cột "Đơn giá"
            var priceCell = newRow.insertCell(1);
            priceCell.innerHTML = price;
            // Tạo một cell mới cho cột "Số lượng"
            var quantityCell = newRow.insertCell(2);
            quantityCell.innerHTML = number;
            var totalPriceCell = newRow.insertCell(3);
            totalPriceCell.innerHTML = parseInt(priceCell.innerHTML) * parseInt(quantityCell.innerHTML);
        }
        $(document).ready(function () {
            // Lấy tất cả các thẻ td cuối cùng trong tbody
            var tdList = $('#menu-order-table tbody tr td:last-child');

            // Tính tổng giá trị của các thẻ td cuối cùng
            var totalPrice = 0;
            tdList.each(function () {
                totalPrice += parseInt($(this).text());
            });

            // Đặt giá trị của tổng vào thẻ td cuối cùng của tfoot
            $('#menu-order-table tfoot td:last-child').text(totalPrice);
        });
    }
    for (var i = 0; i < counters.length; i++) {
        var decrementButton = counters[i].querySelector(".decrement");
        var incrementButton = counters[i].querySelector(".increment");
        decrementButton.addEventListener("click", decrement);
        incrementButton.addEventListener("click", increment);
        decrementButton.style.display = "none";
        counters[i].querySelector(".count").style.display = "none";
    }

    $(document).ready(function () {

        // Bắt sự kiện click của nút "Đặt món"
        $('.order-btn').click(function () {

            // Lấy các giá trị trong tbody
            var orderItems = [];
            $('#menu-order-table tbody tr').each(function () {
                var orderItem = {};
                orderItem.name = $(this).find('td:eq(0)').text();
                orderItem.quantity = parseInt($(this).find('td:eq(2)').text());
                orderItem.note = $(this).find('td:eq(3) input[name="ghichu"]').val();
                orderItems.push(orderItem);
            });

            // Lấy giá trị tổng tiền
            var total = parseInt($('#menu-order-table tfoot td:eq(1)').text());

            // Gửi các giá trị đến đường dẫn /home bằng phương thức POST
            $.ajax({
                type: 'POST',
                url: '/home',
                data: { orderItems: orderItems, total: total },
                success: function (response) { 
                    window.location.href = '/home'
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi nếu cần
                }
            });

        });

    });

</script>

</html>